
    { "nvim-lua/popup.nvim", tags = "0.1.0" },
    "sbdchd/neoformat",

    -- Simple plugins can be specified as strings
    "TimUntersberger/neogit",

    -- TJ created lodash of neovim
    "BurntSushi/ripgrep",
    "nvim-lua/plenary.nvim",
    "nvim-telescope/telescope.nvim",
    "nvim-telescope/telescope-file-browser.nvim",
    "nvim-telescope/telescope-media-files.nvim",

    "L3MON4D3/LuaSnip",
    "lambdalisue/suda.vim",

    { "ahmedkhalf/project.nvim", commit = "541115e762764bc44d7d3bf501b6e367842d3d4f" },
    { "goolord/alpha-nvim", commit = "ef27a59e5b4d7b1c2fe1950da3fe5b1c5f3b4c94" },

    -- All the things
    "hrsh7th/nvim-cmp" -- completions
    "hrsh7th/cmp-buffer" -- buffer source
    "hrsh7th/cmp-nvim-lsp" -- lsp source
    "hrsh7th/cmp-path" -- path source
    "hrsh7th/cmp-nvim-lua" -- nvim lua source
    "hrsh7th/cmp-cmdline" -- cmdline source
    { "tzachar/cmp-tabnine", build = "./install.sh", requires = "hrsh7th/nvim-cmp" },
    "saadparwaiz1/cmp_luasnip" -- snippet source

    "neovim/nvim-lspconfig",
    "glepnir/lspsaga.nvim",
    "onsails/lspkind-nvim",
    "nvim-lua/lsp_extensions.nvim",
    "simrat39/symbols-outline.nvim",

    "williamboman/mason.nvim",

    "mfussenegger/nvim-dap",
    "mfussenegger/nvim-dap-ui",
    "mfussenegger/nvim-jdtls",

    -- Primeagen doesn"t create lodash
    "ThePrimeagen/git-worktree.nvim",
    "ThePrimeagen/harpoon",

    "mbbill/undotree",

    -- Colorscheme section
    "gruvbox-community/gruvbox",
    "folke/tokyonight.nvim",
    "shaunsingh/nord.nvim",

    {"nvim-treesitter/nvim-treesitter",
        build = ":TSUpdate",
    },

    "nvim-treesitter/playground",
    "romgrk/nvim-treesitter-context",


    "theHamsta/nvim-dap-virtual-text",

    "akinsho/bufferline.nvim",

    {"numToStr/Comment.nvim",
        config = function()
            require('Comment').setup()
        end
    },

    "ray-x/go.nvim",
    "ray-x/guihua.lua",

    -- Color highlighter
    "norcalli/nvim-colorizer.lua",

    'lervag/vimtex'
    'mhinz/neovim-remote'

    "RRethy/vim-illuminate",

    "lukas-reineke/indent-blankline.nvim",

    "linty-org/key-menu.nvim",
    {"windwp/nvim-autopairs", 
        config = function()
            require('nvim-autopairs').setup()
        end
    },

    "elkowar/yuck.vim",

    {"xuhdev/vim-latex-live-preview",
        config = function()
            vim.cmd([[
                let g:livepreview_previewer = 'zathura'
                " This is necessary for VimTeX to load properly. The "indent" is optional.
                " Note that most plugin managers will do this automatically.
                filetype plugin indent on

                " This enables Vim's and neovim's syntax-related features. Without this, some
                " VimTeX features will not work (see ":help vimtex-requirements" for more info).
                syntax enable

                " Viewer options: One may configure the viewer either by specifying a built-in
                " viewer method:
                let g:vimtex_view_method = 'zathura'

                " VimTeX uses latexmk as the default compiler backend. If you use it, which is
                " strongly recommended, you probably don't need to configure anything. If you
                " want another compiler backend, you can change it as follows. The list of
                " supported backends and further explanation is provided in the documentation,
                " see ":help vimtex-compiler".
                let g:vimtex_compiler_method = 'latexrun'

                " Most VimTeX mappings rely on localleader and this can be changed with the
                " following line. The default is usually fine and is the symbol "\".
                let maplocalleader = ",",
            ]])
        end
    },

    -- use("lervag/vimtex", {
    --     config = function ()
    --         vim.cmd([[let g:livepreview_previewer = 'zathura']])
    --     end
    -- })

    {"iamcco/markdown-preview.nvim",
        build = "cd app && npm install",
        config = function()
            vim.g.mkdp_filetypes = { "markdown" },
        end,
        ft = { "markdown" },
    },

    "kyazdani42/nvim-web-devicons",

    -- use("folke/which-key.nvim", {
    --     config = function()
    --         require("which-key").setup {},
    --     end
    -- })
    -- explorer
    -- use (
    --     'kyazdani42/nvim-tree.lua',
    --     {
    --         requires = 'kyazdani42/nvim-web-devicons', -- optional, for file icons
    --     },
    -- )
