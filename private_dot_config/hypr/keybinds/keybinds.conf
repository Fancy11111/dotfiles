$myTerminal = "kitty"
$myEditor = "nvim"
$myBrowser = "brave"
$myFileManager = "nemo"
$myScreenshot = "screenshot"
$myScreenshotClipboard = "screenshot-clipboard"
$myDiscord = "discord"
# $myDiscord = "webcord"
$myObsidian = "obsidian"
$myXournalpp = "xournalpp"
$myMattermost = "mattermost-desktop"
$volumeUp = pamixer -i 5 && changeVolume
$volumeDown = pamixer -d 5 && changeVolume
$volumeToggleMute = pamixer -t && changeVolume
$myIntellij = intellij-idea-ultimate-edition

# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER 
$mainModShift = SUPER_SHIFT 

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, Return, exec, $myTerminal 
bind = $mainMod, C, killactive, 
bind = $mainModShift, Q, exec, "/home/daniel/.bin/launch-wofi-exit"
bind = $mainModShift, F, exec, $myFileManager
bind = $mainModShift, D, exec, $myDiscord
bind = $mainModShift, X, exec, $myXournalpp
bind = $mainModShift, M, exec, $myMattermost
bind = $mainModShift, S, exec, "spotify-launcher"
bind = $mainMod, B, exec, $myBrowser 
bind = $mainModShift, B, exec, "brave --incognito" 
bind = $mainModShift, B, exec, echo $PATH > test_path
bind = $mainModShift, O, exec, $myObsidian
bind = $mainModShift, I, exec, $myIntellij
bind = $mainModShift, Print, exec, $myScreenshot
# bind = $mainMod, Print, exec, $myScreenshotClipboard
bind = $mainMod, Print, exec, "echo 'print test' > /home/daniel/test" 
bind = $mainMod, M, exec, "echo 'print test' > /home/daniel/test" 
bind = $mainMod, Space, fullscreen, 1 # maximize
bind = $mainModShift, Space, fullscreen, 1 # fullscreen
bind = $mainMod, F, togglefloating, 
bind = $mainMod, A, exec, alacritty -e tmux a
bind = $mainModShift, C, centerwindow, 
bind = $mainMod, R, exec, wofi --show drun
bind = $mainModShift, U, exec, "screenkey --opacity 0.5 --key-mode translated --persist -s small" 
bind = $mainModShift, P, pin, # float

bind = $mainModShift, L, exec, "hyprlock"

bindle=, XF86AudioRaiseVolume, exec, $volumeUp
bindle= $mainModShift, code:59, exec, $volumeUp
bindle=, XF86AudioLowerVolume, exec, $volumeDown
bindle= $mainModShift, code:60, exec, $volumeDown
bindl=, XF86AudioMute, exec, $volumeToggleMute
bindle= $mainModShift, code:61, exec, $volumeToggleMute

bindle=, XF86MonBrightnessDown, exec, brightnessctl -d intel_backlight s 5-% && changeBrightness
bindle=, XF86MonBrightnessUp, exec, brightnessctl -d intel_backlight s +5% && changeBrightness

# bindr= $mainMod, Tab, exec, hyprctl keyword general:layout master || hyprctl keyword general:layout dwindle

bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r

# #### Dwindle Binds
# bind = $mainModShift, J, swapnext,  
# bind = $mainModShift, K, swapnext, prev
# bind = $mainMod, J, cyclenext,
# bind = $mainMod, K, cyclenext, prev
# bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, G, togglesplit, # dwindle

# #### Master Binds
bind = $mainMod, J, layoutmsg, cyclenext
bind = $mainModShift, J, layoutmsg, swapnext
bind = $mainMod, K, layoutmsg, cycleprev
bind = $mainModShift, K, layoutmsg, swapprev
bind = $mainMod, N, layoutmsg, swapwithmaster auto
bind = $mainMod, Tab, layoutmsg, orientationcycle left top

# will switch to a submap called resize
bind=ALT,R,submap,resize

# will start a submap called "resize"
submap=resize

# sets repeatable binds for resizing the active window
binde=,L,resizeactive,10 0
binde=,H,resizeactive,-10 0
binde=,K,resizeactive,0 -10
binde=,J,resizeactive,0 10

# use reset to go back to the global submap
bind=,escape,submap,reset 

# will reset the submap, meaning end the current one and return to the global one
submap=reset

# will switch to a submap called resize
bind=ALT,M,submap,move

# will start a submap called "resize"
submap=move

# sets repeatable binds for resizing the active window
binde=,L,moveactive,22 0
binde=,H,moveactive,-22 0
binde=,J,moveactive,0 -20
binde=,K,moveactive,0 20

# use reset to go back to the global submap
bind=,escape,submap,reset 

# will reset the submap, meaning end the current one and return to the global one
submap=reset

binde = $mainMod, Left, movewindow, -10 0
binde = $mainMod, Right, movewindow, 10 0
binde = $mainMod, Up, movewindow, 0 10
binde = $mainMod, Down, movewindow, 0 -10

bind = $mainMod, W, focusmonitor, 0
bind = $mainMod, E, focusmonitor, 1
bind = $mainMod, R, focusmonitor, 2

# bind = $mainModShift, W, focusmonitor, 0
# bind = $mainModShift, E, focusmonitor, 1
# bind = $mainModShift, R, focusmonitor, 2

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, focusworkspaceoncurrentmonitor, 1
bind = $mainMod, 2, focusworkspaceoncurrentmonitor, 2
bind = $mainMod, 3, focusworkspaceoncurrentmonitor, 3
bind = $mainMod, 4, focusworkspaceoncurrentmonitor, 4
bind = $mainMod, 5, focusworkspaceoncurrentmonitor, 5
bind = $mainMod, 6, focusworkspaceoncurrentmonitor, 6
bind = $mainMod, 7, focusworkspaceoncurrentmonitor, 7
bind = $mainMod, 8, focusworkspaceoncurrentmonitor, 8
bind = $mainMod, 9, focusworkspaceoncurrentmonitor, 9
bind = $mainMod, 0, focusworkspaceoncurrentmonitor, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainModShift, 1, movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, movetoworkspacesilent, 6
bind = $mainMod SHIFT, 7, movetoworkspacesilent, 7
bind = $mainMod SHIFT, 8, movetoworkspacesilent, 8
bind = $mainMod SHIFT, 9, movetoworkspacesilent, 9
bind = $mainMod SHIFT, 0, movetoworkspacesilent, 10

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, focusworkspaceoncurrentmonitor, e-1
bind = $mainMod, mouse_up, focusworkspaceoncurrentmonitor, e+1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# trigger when the switch is toggled
bindl=,switch:Lid Switch,exec,swaylock -k -F -e -l -L --clock --effect-blur 10x10 -i ~/Pictures/desktop/nebula.jpg
# trigger when the switch is turning on
# bindl=,switch:on:[switch name],exec,hyprctl keyword monitor "eDP-1, 2560x1600, 0x0, 1"
# trigger when the switch is turning off
bindl=,switch:off:Lid Switch,exec, systemctl suspend


# bindl=,switch:Lid Switch,exec,touch ~/test
bind= $mainModShift,B,exec,touch ~/test
